GIT
git reset --hard 95e7713
git reset --hard HEAD
git reflog
VIM

Installing plugins:
git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim

sudo curl -sL https://raw.githubusercontent.com/egalpin/apt-vim/master/install.sh | sh
git clone https://github.com/scrooloose/nerdtree.git ~/.vim/bundle/nerdtree
:help NERDTree.txt

.vimrc:
set shiftwidth=4
set tabstop=4
set softtabstop=4
set expandtab
map <F2>  :NERDTreeToggle<CR>
map ,u :s/^\([/(]\*\\|<!--\) \(.*\) \(\*[/)]\\|-->\)$/\2/<CR>
map ,h :s#^#<!-- #<CR>:s#$# -->#<CR>


"=====================================================
"" Python-mode settings
"=====================================================
"" отключаем автокомплит по коду (у нас вместо него используется jedi-vim)
let g:pymode_rope = 1
let g:pymode_rope_completion = 1
let g:pymode_rope_complete_on_dot = 1

" документация
let g:pymode_doc = 1
let g:pymode_doc_key = 'K'
" проверка кода
let g:pymode_lint = 1
let g:pymode_lint_checker = "pyflakes,pep8"
" let g:pymode_lint_ignore="E501,W601,C0110"
" провека кода после сохранения
let g:pymode_lint_write = 1
"
" " поддержка virtualenv
" let g:pymode_virtualenv = 1
"
" " установка breakpoints
" let g:pymode_breakpoint = 1
" let g:pymode_breakpoint_key = '<leader>b'
"
" " подстветка синтаксиса
" let g:pymode_syntax = 1
" let g:pymode_syntax_all = 1
" let g:pymode_syntax_indent_errors = g:pymode_syntax_all
" let g:pymode_syntax_space_errors = g:pymode_syntax_all
"
" " отключить autofold по коду
" let g:pymode_folding = 0
"
" " возможность запускать код
" let g:pymode_run = 0
"


au FileType python setlocal formatprg=autopep8\ -

autocmd BufLeave,FocusLost silent! wall

au BufRead,BufNewFile * let b:save_time = localtime()

au CursorHold * call UpdateFile()

let g:autosave_time = 1

" save if needed / update the save_time after the save
function! UpdateFile()
   if((localtime() - b:save_time) >= g:autosave_time)
         update
         let b:save_time = localtime()
   else
" just debugging info
         echo "[+] ". (localtime() - b:save_time) ."seconds have elapsed so far."
   endif
endfunction

set nocompatible              " required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

Plugin 'klen/python-mode'
Plugin 'scrooloose/nerdtree'
" add all your plugins here (note older versions of Vundle
" used Bundle instead of Plugin)

" ...

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

export EDITOR=vim; crontab -e
vim VIM Vim
set number
set nonumber
^#\@!\&^\n\@!


LINUX
cd /usr/local/src && wget -qO- https://get.docker.com/ | sh
unset {http,https,ftp}_proxy
7z x '*.jar' -o'*'
sudo -l
sudo -ll
sudo -lU user_name
mkdir `date +%d-%m-%Y` && mv ./* `date +%d-%m-%Y`
select-editor
pip freeze > requirements.txt
pip install -r requirements.txt
screen -x screenname - attach
screen -ls - list screens
in screen session : ^a+d - leave session alone

ssh-keygen -t rsa

alias ls="ls -l"
unalias ls

groups username
groupdel group
chage -d 0 username
usermod -aG group username
gpasswd -a username group
gpasswd -d username group
deluser testuser --remove-home
find /var/www/html-site -type f -exec chmod 644 {} \;
find . -type f -name "*.pyc" -exec rm {} \;

cat ~/.mozilla/firefox/profiles.ini | grep -i "path"
git clone https://github.com/Unode/firefox_decrypt
python firefox_decrypt/firefox_decrypt.py

date +%s
date -d @1500295952



iptables-save > iptables.raw


PYTHON
python3.6 -m pip install flask
